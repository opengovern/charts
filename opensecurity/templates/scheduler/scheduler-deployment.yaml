apiVersion: apps/v1
kind: Deployment
metadata:
  name: scheduler
  namespace: {{ .Release.Namespace }}
  labels:
    app: scheduler
spec:
  minReadySeconds: 10
  replicas: 1
  selector:
    matchLabels:
      app: scheduler
  template:
    metadata:
      labels:
        app: scheduler
    spec:
      serviceAccountName: scheduler
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              preference:
                matchExpressions:
                  - key: opencomply-node
                    operator: In
                    values:
                      - app

      # <<< BEGIN: initContainers Block (Compatible Version) >>>
      initContainers:
        - name: wait-for-core-service
          image: curlimages/curl:8.5.0 # Using the same image version as es-sink example
          env:
            - name: CORE_HEALTH_URL
              value: "http://core-service.{{ .Release.Namespace }}.svc.cluster.local:6251/health"
          command: ["sh","-xc"]
          args:
            - |
              # Ensure these Helm values exist in your values.yaml or provide defaults
              retries={{ .Values.opensecurity.initRetryCount | default 30 }} # Added default just in case
              delay={{ .Values.opensecurity.initRetryDelay | default 5 }}    # Added default just in case

              echo "InitContainer (scheduler): Waiting for core-service at ${CORE_HEALTH_URL}…"
              count=0
              # Loop until curl successfully retrieves the health endpoint (HTTP 2xx/3xx)
              # -sf: silent (-s) and fail on server error (-f)
              until curl -sf "${CORE_HEALTH_URL}" -o /dev/null; do
                count=$((count+1))
                if [ "$count" -ge "$retries" ]; then
                  echo "InitContainer (scheduler): core-service at ${CORE_HEALTH_URL} still unreachable after ${retries} retries – exiting."
                  exit 1
                fi
                echo "InitContainer (scheduler): Sleeping ${delay}s before retrying core-service (attempt ${count}/${retries})…"
                sleep "${delay}"
              done
              echo "InitContainer (scheduler): core-service is healthy!"
      # <<< END: initContainers Block >>>

      containers:
      - name: scheduler
        image: "{{ .Values.opensecurity.docker.registry }}/scheduler-service:{{ .Values.opensecurity.docker.tags.schedulerService }}"
        command: ["/scheduler-service"]
        resources:
         limits:
           cpu: 500m
           memory: 2Gi
         requests:
           cpu: 100m
           memory: 1Gi
        args:
        - --id=$(SCHEDULER_ID)
        imagePullPolicy: Always
        env:
        # --- Keep all existing env vars ---
        - name: NATS_URL
          value: "{{ .Release.Name }}-nats.{{ .Release.Namespace }}.svc.cluster.local:4222"
        - name: HTTP_ADDRESS
          value: "0.0.0.0:5251"
        - name: GRPC_ADDRESS
          value: "0.0.0.0:5252"
        - name: POSTGRESQL_HOST
          value: "{{ include "postgres.endpoint" . }}"
        - name: POSTGRESQL_PORT
          value: "{{ include "postgres.port" . }}"
        - name: POSTGRESQL_DB
          value: "describe"
        - name: POSTGRESQL_USERNAME
          value: "describe_scheduler"
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: schedulerUserPassword
        - name: POSTGRESQL_SSLMODE
          value: "{{ include "postgres.sslMode" . }}"
        - name: SCHEDULER_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: WORKSPACE_NAME
          value: "main"
        - name: DESCRIBE_INTERVAL_HOURS
          value: "12"
        - name: FULL_DISCOVERY_INTERVAL_HOURS
          value: "48"
        - name: COST_DISCOVERY_INTERVAL_HOURS
          value: "24"
        - name: DESCRIBE_TIMEOUT_HOURS
          value: "12"
        - name: COMPLIANCE_INTERVAL_HOURS
          value: "24"
        - name: QUERY_VALIDATOR_ENABLED
          value: "{{ .Values.opensecurity.queryvalidator.enabled }}"
        - name: SERVERLESS_PROVIDER
          value: "local"
        - name: COMPLIANCEINTERVALHOURS
          value: "48"
        - name: COMPLIANCE_TIMEOUT_HOURS
          value: "1"
        - name: INSIGHT_INTERVAL_HOURS
          value: "12"
        - name: CHECKUP_INTERVAL_HOURS
          value: "2"
        - name: MUST_SUMMARIZE_INTERVAL_HOURS
          value: "4"
        - name: CORE_BASE_URL
          value: "http://core-service.{{ .Release.Namespace }}.svc.cluster.local:6251"
        - name: COMPLIANCE_BASE_URL
          value: "http://compliance-service.{{ .Release.Namespace }}.svc.cluster.local:7251"
        - name: INTEGRATION_BASE_URL
          value: "http://integration-service.{{ .Release.Namespace }}.svc.cluster.local:8000"
        - name: ESSINK_BASEURL
          value: "http://es-sink-service.{{ .Release.Namespace }}.svc.cluster.local:8000"
        - name: AUTH_GRPC_URI
          value: "auth-service.{{ .Release.Namespace }}.svc.cluster.local:50051"
{{- include "elastic.envs" . | indent 8 }}
        - name: DESCRIBE_JOB_ENDPOINT_LOCAL
          value: "scheduler.{{ .Release.Namespace }}.svc.cluster.local:5252"
        - name: DESCRIBE_DELIVER_ENDPOINT_LOCAL
          value: "es-sink-service.{{ .Release.Namespace }}.svc.cluster.local:5252"
        - name: KMS_ACCOUNT_REGION
          value: "us-east-2"
        - name: VAULT_PROVIDER
          value: "hashicorp-vault"
        - name: VAULT_HASHICORP_ADDRESS
          value: "http://{{ .Release.Name }}-vault-internal.{{.Release.Namespace}}.svc.cluster.local:8200"
        - name: VAULT_KEY_ID
          value: {{ .Values.opensecurity.vault.keyID }}
        - name: DO_DELETE_OLD_RESOURCES
          value: "true"
        - name: DO_PROCESS_RECEIVED_MSGS
          value: "true"
        - name: OPERATION_MODE_CONFIG
          value: "scheduler"
        - name: JAEGER_SERVICE_NAME
          value: "scheduler"
        - name: JAEGER_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: JAEGER_SAMPLE_RATE
          value: "0.005"
        - name: COMPLIANCE_ENABLED
          value: "{{ .Values.opensecurity.compliance }}"