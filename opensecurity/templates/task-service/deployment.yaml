apiVersion: apps/v1
kind: Deployment
metadata:
  name: task-service
  namespace: {{ .Release.Namespace }}
  labels:
    app: task-service
spec:
  minReadySeconds: 10
  replicas: {{ .Values.opensecurity.replicaCount }}
  selector:
    matchLabels:
      app: task-service
  template:
    metadata:
      labels:
        app: task-service
    spec:
      serviceAccountName: task

      # <<< BEGIN: initContainers Block >>>
      initContainers:
        - name: wait-for-core-service
          image: curlimages/curl:8.5.0 # Consistent image
          env:
            - name: CORE_HEALTH_URL
              # URL for the core-service health endpoint
              value: "http://core-service.{{ .Release.Namespace }}.svc.cluster.local:6251/health"
          command: ["sh","-xc"]
          args:
            - |
              # Consistent use of Helm values with defaults
              retries={{ .Values.opensecurity.initRetryCount | default 30 }}
              delay={{ .Values.opensecurity.initRetryDelay | default 5 }}

              # Updated logging context to 'task-service'
              echo "InitContainer (task-service): Waiting for core-service at ${CORE_HEALTH_URL}…"
              count=0
              # Loop until core-service health check succeeds
              until curl -sf "${CORE_HEALTH_URL}" -o /dev/null; do
                count=$((count+1))
                if [ "$count" -ge "$retries" ]; then
                  # Updated logging context
                  echo "InitContainer (task-service): core-service at ${CORE_HEALTH_URL} still unreachable after ${retries} retries – exiting."
                  exit 1
                fi
                # Updated logging context
                echo "InitContainer (task-service): Sleeping ${delay}s before retrying core-service (attempt ${count}/${retries})…"
                sleep "${delay}"
              done
              # Updated logging context
              echo "InitContainer (task-service): core-service is healthy!"
      # <<< END: initContainers Block >>>

      containers:
      - name: task-service
        image: "{{ .Values.opensecurity.docker.registry }}/task-service:{{ .Values.opensecurity.docker.tags.tasks }}"
        command: ["/task-service"]
        imagePullPolicy: Always
        env:
        # --- Keep all existing env vars ---
        - name: TASKS_POSTGRES__HOST
          value: "{{ include "postgres.endpoint" . }}"
        - name: TASKS_POSTGRES__PORT
          value: "{{ include "postgres.port" . }}"
        - name: TASKS_POSTGRES__DB
          value: "task"
        - name: TASKS_POSTGRES__USERNAME
          value: "postgres"
        - name: TASKS_POSTGRES__PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: postgres-password
        - name: TASKS_POSTGRES__SSLMODE
          value: "{{ include "postgres.sslMode" . }}"
        - name: TASKS_HTTP__ADDRESS
          value: "0.0.0.0:8001"
        - name: TASKS_CORE__BASE_URL
          value: "http://core-service.{{ .Release.Namespace }}.svc.cluster.local:6251"
        - name: TASKS_VAULT__PROVIDER
          value: "hashicorp-vault"
        - name: TASKS_VAULT__HASHICORP__ADDRESS
          value: "http://{{ .Release.Name }}-vault-internal.{{.Release.Namespace}}.svc.cluster.local:8200"
        - name: TASKS_VAULT__KEY_ID
          value: {{ .Values.opensecurity.vault.keyID }}

{{- include "elastic.envs" . | indent 8 }}

        - name: TASKS_ESSINK_ENDPOINT
          value: "es-sink-service.{{ .Release.Namespace }}.svc.cluster.local:5252"

        - name: CURRENT_NAMESPACE
          value: "{{ .Release.Namespace }}"
        - name: KEDA_ENABLED
          value: "{{ .Values.keda.enabled }}"
        - name: TASKS_NATS__URL
          value: "{{ .Release.Name }}-nats.{{ .Release.Namespace }}.svc.cluster.local:4222"
        - name: SCALED_OBJECT_NATS_URL
          value: "{{ .Release.Namespace }}-nats-headless.{{ .Release.Namespace }}.svc.cluster.local:8222"
        - name: CORE_BASEURL # Note: This seems redundant with TASKS_CORE__BASE_URL
          value: "http://core-service.{{ .Release.Namespace }}.svc.cluster.local:6251"
        - name: NATS_URL # Note: This seems redundant with TASKS_NATS__URL
          value: "{{ .Release.Name }}-nats.{{ .Release.Namespace }}.svc.cluster.local:4222"