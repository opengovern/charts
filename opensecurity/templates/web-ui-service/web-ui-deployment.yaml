apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-ui
  namespace: {{ .Release.Namespace }}
  labels:
    app: web-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web-ui
  template:
    metadata:
      labels:
        app: web-ui
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              preference:
                matchExpressions:
                  - key: opencomply-node
                    operator: In
                    values:
                      - app
      containers:
      - name: web-ui
        image: "{{ .Values.opengovernance.docker.registry }}/web-ui:{{ .Values.opengovernance.docker.tags.webui }}"
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 100m
            memory: 300Mi
          requests:
            cpu: 50m
            memory: 100Mi
        ports:
          - containerPort: 7298
        env:
          - name: REACT_APP_SHOW_COMPLIANCE
            value: "{{ .Values.opengovernance.compliance }}"

        volumeMounts:
          - mountPath: /build/env-config.js
            name: web-ui-env
            subPath: env-config.js
            
      volumes:
        - name: web-ui-env
          configMap:
            name: web-ui-env
            items:
              - key: env-config.js
                path: env-config.js


---
apiVersion: v1
kind: ConfigMap
metadata:
  name: web-ui-env
  namespace: {{ .Release.Namespace }}
  labels:
    app: web-ui
data:
  env-config.js: |
    window.__RUNTIME_CONFIG__ = {
    NODE_ENV: "prod",
    REACT_APP_RUNTIME_ENVIRONMENT: "production",
    REACT_APP_BASE_URL: "https://{{ .Values.global.domain }}",
    REACT_APP_AUTH_BASE_URL: "https://{{ .Values.global.domain }}",
    REACT_APP_SHOW_COMPLIANCE: "{{ .Values.opengovernance.compliance }}",
    };



